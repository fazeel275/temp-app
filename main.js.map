{"version":3,"sources":["./src/app/cel-to-fah.pipe.ts","./src/environments/environment.ts","./src/app/fah-to-cel.pipe.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/material/material.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'celToFah'\n})\nexport class CelToFahPipe implements PipeTransform {\n\n  transform(value:number): number{\n    return ((9/5)*value)+32;\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'fahToCel'\n})\nexport class FahToCelPipe implements PipeTransform {\n\n  transform(value:number): number{\n    return ((value-32)*5)/9;\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'TEMPERATURE CONVERTER';\n  public Celsius:number=0.0;\n  public Fahrenheit:number=0.0;\n}","     <mat-toolbar color=\"primary\" class=\"navbar\">\n        <div><mat-icon>eco</mat-icon> Fazeel</div>\n        <div>\n           <button mat-flat-button [matMenuTriggerFor]=\"appMenu1\" color=\"warn\"><b>About</b></button>\n            <mat-menu #appMenu1=\"matMenu\">\n                <p mat-menu-item><b>Change from &#8451; to &#8457; and vice-versa</b></p>\n            </mat-menu>\n            <button mat-flat-button [matMenuTriggerFor]=\"appMenu2\" color=\"warn\"><b>Formula</b></button>\n            <mat-menu #appMenu2=\"matMenu\">\n                <button mat-menu-item><b>C = (F âˆ’ 32) * 5/9</b></button>\n                <button mat-menu-item><b>F=C(9/5)+32</b></button>\n            </mat-menu>\n            <button mat-flat-button [matMenuTriggerFor]=\"appMenu3\" color=\"warn\"><b>Contact</b></button>\n            <mat-menu #appMenu3=\"matMenu\">\n                <button mat-menu-item><b>Developed by:Fazeel Ansari</b></button>\n                <button mat-menu-item><b>Phone: (+91) 112233</b></button>\n            </mat-menu>\n        </div>\n        </mat-toolbar>\n    <p style=\"text-align: center;color:#A16E83;\" class=\"mat-display-3\"><b>{{title}}</b></p>\n    <div class=\"mat-display-1 divs\" style=\"margin:auto;width: 50%;\" >\n    <h3 class=\"mat-display-1 h1s\"><b>Celsius to Fahrenheit</b></h3>\n    <p>Celsius:<input type=\"number\" name=\"Celsius\" [(ngModel)]=\"Celsius\">&#8451;</p>\n    <p>Fahrenheit={{Celsius|celToFah|number:\".2\"}}&#8457;</p>\n    </div>\n    <br>\n    <br>\n    \n    <div class=\"mat-display-1 divs\" style=\"margin:auto;width: 50%;\">\n    <h3 class=\"mat-display-1 h1s\" ><b>Fahrenheit to Celsius</b></h3>\n    <p>Fahrenheit:<input type=\"number\" name=\"Fahrenheit\" [(ngModel)]=\"Fahrenheit\">&#8457;</p>\n    <p>Celsius={{Fahrenheit|fahToCel|number:\".2\"}}&#8451;</p>\n    </div>\n    <br>\n    ","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppComponent } from './app.component';\nimport { CelToFahPipe } from './cel-to-fah.pipe';\nimport { FahToCelPipe } from './fah-to-cel.pipe';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './material/material.module';\nimport {FormsModule} from '@angular/forms';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CelToFahPipe,\n    FahToCelPipe,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    FormsModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: environment.production,\n      // Register the ServiceWorker as soon as the app is stable\n      // or after 30 seconds (whichever comes first).\n      registrationStrategy: 'registerWhenStable:30000'\n    })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport {MatButtonModule,} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatMenuModule} from '@angular/material/menu';\n\n\n\nconst material= [\n  MatButtonModule,\n  MatIconModule,\n  MatToolbarModule,\n  MatMenuModule,\n];\n\n\n@NgModule({\n  imports: [material],\n  exports:[material]\n})\nexport class MaterialModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}